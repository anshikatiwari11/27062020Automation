<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="13" failed="3" total="111" passed="95">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="293969" started-at="2020-08-27T07:00:44Z" finished-at="2020-08-27T07:05:38Z">
    <groups>
    </groups>
    <test name="HomePage" duration-ms="188033" started-at="2020-08-27T07:00:44Z" finished-at="2020-08-27T07:03:52Z">
      <class name="testScripts.HomePage.HomePage">
        <test-method status="PASS" signature="launchBrowser(java.lang.String)[pri:0, instance:testScripts.HomePage.HomePage@5622fdf]" name="launchBrowser" is-config="true" duration-ms="58401" started-at="2020-08-27T12:30:44Z" finished-at="2020-08-27T12:31:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchBrowser -->
        <test-method status="PASS" signature="verifyIsHomepageVisible()[pri:-1, instance:testScripts.HomePage.HomePage@5622fdf]" name="verifyIsHomepageVisible" duration-ms="1546" started-at="2020-08-27T12:31:42Z" finished-at="2020-08-27T12:31:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyIsHomepageVisible -->
        <test-method status="PASS" signature="verifyHomepagetext()[pri:0, instance:testScripts.HomePage.HomePage@5622fdf]" name="verifyHomepagetext" duration-ms="1938" started-at="2020-08-27T12:31:44Z" finished-at="2020-08-27T12:31:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyHomepagetext -->
        <test-method status="PASS" signature="verifyIsSearchsupportClickable()[pri:1, instance:testScripts.HomePage.HomePage@5622fdf]" name="verifyIsSearchsupportClickable" duration-ms="27537" started-at="2020-08-27T12:31:46Z" finished-at="2020-08-27T12:32:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyIsSearchsupportClickable -->
        <test-method status="PASS" signature="verifyIsVisitsupportClickable()[pri:2, instance:testScripts.HomePage.HomePage@5622fdf]" name="verifyIsVisitsupportClickable" duration-ms="4465" started-at="2020-08-27T12:32:13Z" finished-at="2020-08-27T12:32:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyIsVisitsupportClickable -->
        <test-method status="PASS" signature="verifyIsAutomobileClickable()[pri:3, instance:testScripts.HomePage.HomePage@5622fdf]" name="verifyIsAutomobileClickable" duration-ms="8575" started-at="2020-08-27T12:32:18Z" finished-at="2020-08-27T12:32:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyIsAutomobileClickable -->
        <test-method status="PASS" signature="verifyIsTruckClickable()[pri:4, instance:testScripts.HomePage.HomePage@5622fdf]" name="verifyIsTruckClickable" duration-ms="3255" started-at="2020-08-27T12:32:26Z" finished-at="2020-08-27T12:32:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyIsTruckClickable -->
        <test-method status="PASS" signature="verifyIsMotorcycleClickable()[pri:5, instance:testScripts.HomePage.HomePage@5622fdf]" name="verifyIsMotorcycleClickable" duration-ms="3542" started-at="2020-08-27T12:32:29Z" finished-at="2020-08-27T12:32:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyIsMotorcycleClickable -->
        <test-method status="PASS" signature="verifyIsCamperClickable()[pri:6, instance:testScripts.HomePage.HomePage@5622fdf]" name="verifyIsCamperClickable" duration-ms="5254" started-at="2020-08-27T12:32:33Z" finished-at="2020-08-27T12:32:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyIsCamperClickable -->
        <test-method status="PASS" signature="verifyIsTricentis_aboutClickable()[pri:7, instance:testScripts.HomePage.HomePage@5622fdf]" name="verifyIsTricentis_aboutClickable" duration-ms="19619" started-at="2020-08-27T12:32:38Z" finished-at="2020-08-27T12:32:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyIsTricentis_aboutClickable -->
        <test-method status="PASS" signature="verifyIsTricentis_productsClickable()[pri:8, instance:testScripts.HomePage.HomePage@5622fdf]" name="verifyIsTricentis_productsClickable" duration-ms="6717" started-at="2020-08-27T12:32:58Z" finished-at="2020-08-27T12:33:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyIsTricentis_productsClickable -->
        <test-method status="PASS" signature="verifyIsTricentis_eventsClickable()[pri:9, instance:testScripts.HomePage.HomePage@5622fdf]" name="verifyIsTricentis_eventsClickable" duration-ms="10839" started-at="2020-08-27T12:33:05Z" finished-at="2020-08-27T12:33:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyIsTricentis_eventsClickable -->
        <test-method status="PASS" signature="verifyIsTricentis_resourcesClickable()[pri:10, instance:testScripts.HomePage.HomePage@5622fdf]" name="verifyIsTricentis_resourcesClickable" duration-ms="9135" started-at="2020-08-27T12:33:15Z" finished-at="2020-08-27T12:33:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyIsTricentis_resourcesClickable -->
        <test-method status="PASS" signature="verifyIsTricentis_servicesClickable()[pri:11, instance:testScripts.HomePage.HomePage@5622fdf]" name="verifyIsTricentis_servicesClickable" duration-ms="7460" started-at="2020-08-27T12:33:25Z" finished-at="2020-08-27T12:33:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyIsTricentis_servicesClickable -->
        <test-method status="PASS" signature="verifyIsNav_facebookClickable()[pri:12, instance:testScripts.HomePage.HomePage@5622fdf]" name="verifyIsNav_facebookClickable" duration-ms="6365" started-at="2020-08-27T12:33:32Z" finished-at="2020-08-27T12:33:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyIsNav_facebookClickable -->
        <test-method status="PASS" signature="verifyIsNav_twitterClickable()[pri:13, instance:testScripts.HomePage.HomePage@5622fdf]" name="verifyIsNav_twitterClickable" duration-ms="5663" started-at="2020-08-27T12:33:38Z" finished-at="2020-08-27T12:33:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyIsNav_twitterClickable -->
        <test-method status="PASS" signature="verifyIsNav_googleClickable()[pri:14, instance:testScripts.HomePage.HomePage@5622fdf]" name="verifyIsNav_googleClickable" duration-ms="5616" started-at="2020-08-27T12:33:44Z" finished-at="2020-08-27T12:33:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyIsNav_googleClickable -->
        <test-method status="PASS" signature="closeBrowser()[pri:0, instance:testScripts.HomePage.HomePage@5622fdf]" name="closeBrowser" is-config="true" duration-ms="2028" started-at="2020-08-27T12:33:50Z" finished-at="2020-08-27T12:33:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- testScripts.HomePage.HomePage -->
    </test> <!-- HomePage -->
    <test name="Motorcycle" duration-ms="105059" started-at="2020-08-27T07:03:53Z" finished-at="2020-08-27T07:05:38Z">
      <class name="testScripts.Motorcycle.EnterProductData">
        <test-method status="PASS" signature="beforeProductData()[pri:0, instance:testScripts.Motorcycle.EnterProductData@1ce92674]" name="beforeProductData" is-config="true" duration-ms="5145" started-at="2020-08-27T12:35:03Z" finished-at="2020-08-27T12:35:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeProductData -->
        <test-method status="PASS" signature="checkNextLabelInsSum()[pri:0, instance:testScripts.Motorcycle.EnterProductData@1ce92674]" name="checkNextLabelInsSum" duration-ms="107" started-at="2020-08-27T12:35:08Z" finished-at="2020-08-27T12:35:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkNextLabelInsSum -->
        <test-method status="PASS" signature="damageInsuranceLabelVisible()[pri:0, instance:testScripts.Motorcycle.EnterProductData@1ce92674]" name="damageInsuranceLabelVisible" duration-ms="40" started-at="2020-08-27T12:35:08Z" finished-at="2020-08-27T12:35:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- damageInsuranceLabelVisible -->
        <test-method status="SKIP" signature="damageInsuranceOptionsVisible(java.lang.String)[pri:0, instance:testScripts.Motorcycle.EnterProductData@1ce92674]" name="damageInsuranceOptionsVisible" duration-ms="0" started-at="2020-08-27T12:35:08Z" data-provider="damageInsuranceOptions" finished-at="2020-08-27T12:35:08Z">
          <exception class="org.testng.TestNGException">
            <message>
              <![CDATA[
Data Provider public java.lang.String[] testScripts.Motorcycle.EnterProductData.damageInsuranceOptions() throws java.io.IOException must return either Object[][] or Iterator<Object>[], not class [Ljava.lang.String;]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestNGException: 
Data Provider public java.lang.String[] testScripts.Motorcycle.EnterProductData.damageInsuranceOptions() throws java.io.IOException must return either Object[][] or Iterator<Object>[], not class [Ljava.lang.String;
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:157)
	at org.testng.internal.Parameters.handleParameters(Parameters.java:430)
	at org.testng.internal.Invoker.handleParameters(Invoker.java:1243)
	at org.testng.internal.Invoker.createParameters(Invoker.java:992)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1082)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestNGException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- damageInsuranceOptionsVisible -->
        <test-method status="SKIP" signature="hobbiesOptionsVisible(java.lang.String)[pri:0, instance:testScripts.Motorcycle.EnterProductData@1ce92674]" name="hobbiesOptionsVisible" duration-ms="0" started-at="2020-08-27T12:35:08Z" data-provider="insuranceSumOptions" finished-at="2020-08-27T12:35:08Z">
          <exception class="org.testng.TestNGException">
            <message>
              <![CDATA[
Data Provider public java.lang.String[] testScripts.Motorcycle.EnterProductData.insuranceSumOptions() throws java.io.IOException must return either Object[][] or Iterator<Object>[], not class [Ljava.lang.String;]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestNGException: 
Data Provider public java.lang.String[] testScripts.Motorcycle.EnterProductData.insuranceSumOptions() throws java.io.IOException must return either Object[][] or Iterator<Object>[], not class [Ljava.lang.String;
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:157)
	at org.testng.internal.Parameters.handleParameters(Parameters.java:430)
	at org.testng.internal.Invoker.handleParameters(Invoker.java:1243)
	at org.testng.internal.Invoker.createParameters(Invoker.java:992)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1082)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestNGException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hobbiesOptionsVisible -->
        <test-method status="PASS" signature="isCalendarButtonClickable()[pri:0, instance:testScripts.Motorcycle.EnterProductData@1ce92674]" name="isCalendarButtonClickable" duration-ms="189" started-at="2020-08-27T12:35:08Z" finished-at="2020-08-27T12:35:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isCalendarButtonClickable -->
        <test-method status="PASS" signature="isDamageInsuranceDropDownVisible()[pri:0, instance:testScripts.Motorcycle.EnterProductData@1ce92674]" name="isDamageInsuranceDropDownVisible" duration-ms="42" started-at="2020-08-27T12:35:08Z" finished-at="2020-08-27T12:35:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isDamageInsuranceDropDownVisible -->
        <test-method status="PASS" signature="isInsuranceSumDropDownVisible()[pri:0, instance:testScripts.Motorcycle.EnterProductData@1ce92674]" name="isInsuranceSumDropDownVisible" duration-ms="54" started-at="2020-08-27T12:35:08Z" finished-at="2020-08-27T12:35:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isInsuranceSumDropDownVisible -->
        <test-method status="PASS" signature="isInsuranceSumLabelVisible()[pri:0, instance:testScripts.Motorcycle.EnterProductData@1ce92674]" name="isInsuranceSumLabelVisible" duration-ms="34" started-at="2020-08-27T12:35:08Z" finished-at="2020-08-27T12:35:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isInsuranceSumLabelVisible -->
        <test-method status="PASS" signature="isNextButtonVisible()[pri:0, instance:testScripts.Motorcycle.EnterProductData@1ce92674]" name="isNextButtonVisible" duration-ms="71" started-at="2020-08-27T12:35:08Z" finished-at="2020-08-27T12:35:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isNextButtonVisible -->
        <test-method status="PASS" signature="isOptionalProductTextBoxVisible()[pri:0, instance:testScripts.Motorcycle.EnterProductData@1ce92674]" name="isOptionalProductTextBoxVisible" duration-ms="75" started-at="2020-08-27T12:35:08Z" finished-at="2020-08-27T12:35:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isOptionalProductTextBoxVisible -->
        <test-method status="PASS" signature="isOptionalProductsLabelVisible()[pri:0, instance:testScripts.Motorcycle.EnterProductData@1ce92674]" name="isOptionalProductsLabelVisible" duration-ms="37" started-at="2020-08-27T12:35:08Z" finished-at="2020-08-27T12:35:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isOptionalProductsLabelVisible -->
        <test-method status="PASS" signature="isPrevButtonVisible()[pri:0, instance:testScripts.Motorcycle.EnterProductData@1ce92674]" name="isPrevButtonVisible" duration-ms="48" started-at="2020-08-27T12:35:08Z" finished-at="2020-08-27T12:35:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isPrevButtonVisible -->
        <test-method status="PASS" signature="isStartDateLabelVisible()[pri:0, instance:testScripts.Motorcycle.EnterProductData@1ce92674]" name="isStartDateLabelVisible" duration-ms="30" started-at="2020-08-27T12:35:09Z" finished-at="2020-08-27T12:35:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isStartDateLabelVisible -->
        <test-method status="PASS" signature="isStartDateTextBoxVisible()[pri:0, instance:testScripts.Motorcycle.EnterProductData@1ce92674]" name="isStartDateTextBoxVisible" duration-ms="53" started-at="2020-08-27T12:35:09Z" finished-at="2020-08-27T12:35:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isStartDateTextBoxVisible -->
        <test-method status="PASS" signature="validDamageInsuranceDropDownSelection()[pri:0, instance:testScripts.Motorcycle.EnterProductData@1ce92674]" name="validDamageInsuranceDropDownSelection" duration-ms="223" started-at="2020-08-27T12:35:09Z" finished-at="2020-08-27T12:35:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validDamageInsuranceDropDownSelection -->
        <test-method status="PASS" signature="validInsuranceDropDown()[pri:0, instance:testScripts.Motorcycle.EnterProductData@1ce92674]" name="validInsuranceDropDown" duration-ms="187" started-at="2020-08-27T12:35:09Z" finished-at="2020-08-27T12:35:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validInsuranceDropDown -->
        <test-method status="SKIP" signature="validStartDateText(java.lang.String)[pri:0, instance:testScripts.Motorcycle.EnterProductData@1ce92674]" name="validStartDateText" duration-ms="0" started-at="2020-08-27T12:35:09Z" data-provider="startDateValid" finished-at="2020-08-27T12:35:09Z">
          <exception class="org.testng.TestNGException">
            <message>
              <![CDATA[
Data Provider public java.lang.String[] testScripts.Motorcycle.EnterProductData.startDateValid() throws java.io.IOException must return either Object[][] or Iterator<Object>[], not class [Ljava.lang.String;]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestNGException: 
Data Provider public java.lang.String[] testScripts.Motorcycle.EnterProductData.startDateValid() throws java.io.IOException must return either Object[][] or Iterator<Object>[], not class [Ljava.lang.String;
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:157)
	at org.testng.internal.Parameters.handleParameters(Parameters.java:430)
	at org.testng.internal.Invoker.handleParameters(Invoker.java:1243)
	at org.testng.internal.Invoker.createParameters(Invoker.java:992)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1082)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestNGException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validStartDateText -->
        <test-method status="PASS" signature="verifyNextButtonText()[pri:0, instance:testScripts.Motorcycle.EnterProductData@1ce92674]" name="verifyNextButtonText" duration-ms="53" started-at="2020-08-27T12:35:09Z" finished-at="2020-08-27T12:35:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyNextButtonText -->
        <test-method status="FAIL" signature="verifyOnClickPrevButton()[pri:0, instance:testScripts.Motorcycle.EnterProductData@1ce92674]" name="verifyOnClickPrevButton" duration-ms="1165" started-at="2020-08-27T12:35:09Z" finished-at="2020-08-27T12:35:10Z">
          <exception class="org.openqa.selenium.ElementClickInterceptedException">
            <message>
              <![CDATA[element click intercepted: Element <button id="preventerinsurancedata" name="Prev (Enter Insurance Data)" type="button" class="prev">...</button> is not clickable at point (392, 415). Other element would receive the click: <div id="ui-datepicker-div" class="ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all" style="position: absolute; top: 362.594px; left: 345.5px; z-index: 1; display: block; width: 290px;">...</div>
  (Session info: chrome=84.0.4147.135)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:53'
System info: host: 'A', ip: '192.168.1.15', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_251'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 84.0.4147.135, chrome: {chromedriverVersion: 84.0.4147.30 (48b3e868b4cc0..., userDataDir: C:\Users\admin\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:63289}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: d2083c3a74f761472736b6af6e125cb9]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementClickInterceptedException: element click intercepted: Element <button id="preventerinsurancedata" name="Prev (Enter Insurance Data)" type="button" class="prev">...</button> is not clickable at point (392, 415). Other element would receive the click: <div id="ui-datepicker-div" class="ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all" style="position: absolute; top: 362.594px; left: 345.5px; z-index: 1; display: block; width: 290px;">...</div>
  (Session info: chrome=84.0.4147.135)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:53'
System info: host: 'A', ip: '192.168.1.15', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_251'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 84.0.4147.135, chrome: {chromedriverVersion: 84.0.4147.30 (48b3e868b4cc0..., userDataDir: C:\Users\admin\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:63289}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: d2083c3a74f761472736b6af6e125cb9
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
	at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:285)
	at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:84)
	at pages.Motorcycle.EnterProductData.ClickPrev(EnterProductData.java:153)
	at testScripts.Motorcycle.EnterProductData.verifyOnClickPrevButton(EnterProductData.java:116)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementClickInterceptedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyOnClickPrevButton -->
        <test-method status="PASS" signature="verifyPrevButtonText()[pri:0, instance:testScripts.Motorcycle.EnterProductData@1ce92674]" name="verifyPrevButtonText" duration-ms="45" started-at="2020-08-27T12:35:10Z" finished-at="2020-08-27T12:35:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPrevButtonText -->
      </class> <!-- testScripts.Motorcycle.EnterProductData -->
      <class name="testScripts.Motorcycle.EnterVehicleData">
        <test-method status="PASS" signature="initialize()[pri:0, instance:testScripts.Motorcycle.EnterVehicleData@73ad2d6]" name="initialize" is-config="true" duration-ms="157" started-at="2020-08-27T12:30:43Z" finished-at="2020-08-27T12:30:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method status="PASS" signature="launchBrowser(java.lang.String)[pri:0, instance:testScripts.Motorcycle.EnterVehicleData@73ad2d6]" name="launchBrowser" is-config="true" duration-ms="28481" started-at="2020-08-27T12:33:53Z" finished-at="2020-08-27T12:34:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchBrowser -->
        <test-method status="PASS" signature="verifyAnnualMileageSelection()[pri:0, instance:testScripts.Motorcycle.EnterVehicleData@73ad2d6]" name="verifyAnnualMileageSelection" duration-ms="2190" started-at="2020-08-27T12:34:21Z" finished-at="2020-08-27T12:34:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAnnualMileageSelection -->
        <test-method status="PASS" signature="verifyCylinderCapacitySelection()[pri:0, instance:testScripts.Motorcycle.EnterVehicleData@73ad2d6]" name="verifyCylinderCapacitySelection" duration-ms="1194" started-at="2020-08-27T12:34:23Z" finished-at="2020-08-27T12:34:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCylinderCapacitySelection -->
        <test-method status="PASS" signature="verifyDateOfmanufacture()[pri:0, instance:testScripts.Motorcycle.EnterVehicleData@73ad2d6]" name="verifyDateOfmanufacture" duration-ms="1199" started-at="2020-08-27T12:34:24Z" finished-at="2020-08-27T12:34:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyDateOfmanufacture -->
        <test-method status="PASS" signature="verifyEnginePerformanceSelection()[pri:0, instance:testScripts.Motorcycle.EnterVehicleData@73ad2d6]" name="verifyEnginePerformanceSelection" duration-ms="1267" started-at="2020-08-27T12:34:26Z" finished-at="2020-08-27T12:34:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyEnginePerformanceSelection -->
        <test-method status="PASS" signature="verifyIsAnnualMileageVisible()[pri:0, instance:testScripts.Motorcycle.EnterVehicleData@73ad2d6]" name="verifyIsAnnualMileageVisible" duration-ms="35" started-at="2020-08-27T12:34:27Z" finished-at="2020-08-27T12:34:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyIsAnnualMileageVisible -->
        <test-method status="PASS" signature="verifyIsAnnualMileagetext()[pri:0, instance:testScripts.Motorcycle.EnterVehicleData@73ad2d6]" name="verifyIsAnnualMileagetext" duration-ms="77" started-at="2020-08-27T12:34:27Z" finished-at="2020-08-27T12:34:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyIsAnnualMileagetext -->
        <test-method status="PASS" signature="verifyIsCylinderCapacityVisible()[pri:0, instance:testScripts.Motorcycle.EnterVehicleData@73ad2d6]" name="verifyIsCylinderCapacityVisible" duration-ms="45" started-at="2020-08-27T12:34:27Z" finished-at="2020-08-27T12:34:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyIsCylinderCapacityVisible -->
        <test-method status="PASS" signature="verifyIsCylinderCapacitytext()[pri:0, instance:testScripts.Motorcycle.EnterVehicleData@73ad2d6]" name="verifyIsCylinderCapacitytext" duration-ms="67" started-at="2020-08-27T12:34:27Z" finished-at="2020-08-27T12:34:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyIsCylinderCapacitytext -->
        <test-method status="PASS" signature="verifyIsDateOfManufacturetext()[pri:0, instance:testScripts.Motorcycle.EnterVehicleData@73ad2d6]" name="verifyIsDateOfManufacturetext" duration-ms="58" started-at="2020-08-27T12:34:27Z" finished-at="2020-08-27T12:34:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyIsDateOfManufacturetext -->
        <test-method status="PASS" signature="verifyIsEnginePerformanceVisible()[pri:0, instance:testScripts.Motorcycle.EnterVehicleData@73ad2d6]" name="verifyIsEnginePerformanceVisible" duration-ms="51" started-at="2020-08-27T12:34:27Z" finished-at="2020-08-27T12:34:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyIsEnginePerformanceVisible -->
        <test-method status="PASS" signature="verifyIsEnginePerformancetext()[pri:0, instance:testScripts.Motorcycle.EnterVehicleData@73ad2d6]" name="verifyIsEnginePerformancetext" duration-ms="57" started-at="2020-08-27T12:34:27Z" finished-at="2020-08-27T12:34:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyIsEnginePerformancetext -->
        <test-method status="PASS" signature="verifyIsListPriceVisible()[pri:0, instance:testScripts.Motorcycle.EnterVehicleData@73ad2d6]" name="verifyIsListPriceVisible" duration-ms="37" started-at="2020-08-27T12:34:27Z" finished-at="2020-08-27T12:34:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyIsListPriceVisible -->
        <test-method status="PASS" signature="verifyIsListpricetext()[pri:0, instance:testScripts.Motorcycle.EnterVehicleData@73ad2d6]" name="verifyIsListpricetext" duration-ms="53" started-at="2020-08-27T12:34:27Z" finished-at="2020-08-27T12:34:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyIsListpricetext -->
        <test-method status="PASS" signature="verifyIsMakeVisible()[pri:0, instance:testScripts.Motorcycle.EnterVehicleData@73ad2d6]" name="verifyIsMakeVisible" duration-ms="43" started-at="2020-08-27T12:34:27Z" finished-at="2020-08-27T12:34:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyIsMakeVisible -->
        <test-method status="PASS" signature="verifyIsMaketext()[pri:0, instance:testScripts.Motorcycle.EnterVehicleData@73ad2d6]" name="verifyIsMaketext" duration-ms="73" started-at="2020-08-27T12:34:27Z" finished-at="2020-08-27T12:34:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyIsMaketext -->
        <test-method status="PASS" signature="verifyIsModelVisible()[pri:0, instance:testScripts.Motorcycle.EnterVehicleData@73ad2d6]" name="verifyIsModelVisible" duration-ms="42" started-at="2020-08-27T12:34:27Z" finished-at="2020-08-27T12:34:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyIsModelVisible -->
        <test-method status="PASS" signature="verifyIsModeltext()[pri:0, instance:testScripts.Motorcycle.EnterVehicleData@73ad2d6]" name="verifyIsModeltext" duration-ms="52" started-at="2020-08-27T12:34:28Z" finished-at="2020-08-27T12:34:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyIsModeltext -->
        <test-method status="PASS" signature="verifyIsNextButtonVisible()[pri:0, instance:testScripts.Motorcycle.EnterVehicleData@73ad2d6]" name="verifyIsNextButtonVisible" duration-ms="34" started-at="2020-08-27T12:34:28Z" finished-at="2020-08-27T12:34:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyIsNextButtonVisible -->
        <test-method status="PASS" signature="verifyIsNextButtontext()[pri:0, instance:testScripts.Motorcycle.EnterVehicleData@73ad2d6]" name="verifyIsNextButtontext" duration-ms="59" started-at="2020-08-27T12:34:28Z" finished-at="2020-08-27T12:34:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyIsNextButtontext -->
        <test-method status="PASS" signature="verifyIsNumberOfSeatsVisible()[pri:0, instance:testScripts.Motorcycle.EnterVehicleData@73ad2d6]" name="verifyIsNumberOfSeatsVisible" duration-ms="31" started-at="2020-08-27T12:34:28Z" finished-at="2020-08-27T12:34:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyIsNumberOfSeatsVisible -->
        <test-method status="PASS" signature="verifyIsNumberofSeatstext()[pri:0, instance:testScripts.Motorcycle.EnterVehicleData@73ad2d6]" name="verifyIsNumberofSeatstext" duration-ms="57" started-at="2020-08-27T12:34:28Z" finished-at="2020-08-27T12:34:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyIsNumberofSeatstext -->
        <test-method status="PASS" signature="verifyIsOpenDateOfCalenderButtonVisible()[pri:0, instance:testScripts.Motorcycle.EnterVehicleData@73ad2d6]" name="verifyIsOpenDateOfCalenderButtonVisible" duration-ms="35" started-at="2020-08-27T12:34:28Z" finished-at="2020-08-27T12:34:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyIsOpenDateOfCalenderButtonVisible -->
        <test-method status="PASS" signature="verifyIsOpenNextButtonVisible()[pri:0, instance:testScripts.Motorcycle.EnterVehicleData@73ad2d6]" name="verifyIsOpenNextButtonVisible" duration-ms="31" started-at="2020-08-27T12:34:28Z" finished-at="2020-08-27T12:34:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyIsOpenNextButtonVisible -->
        <test-method status="PASS" signature="verifyIsOpenPrevButtonVisible()[pri:0, instance:testScripts.Motorcycle.EnterVehicleData@73ad2d6]" name="verifyIsOpenPrevButtonVisible" duration-ms="30" started-at="2020-08-27T12:34:28Z" finished-at="2020-08-27T12:34:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyIsOpenPrevButtonVisible -->
        <test-method status="PASS" signature="verifyIsSelectMakeMakerSelectable()[pri:0, instance:testScripts.Motorcycle.EnterVehicleData@73ad2d6]" name="verifyIsSelectMakeMakerSelectable" duration-ms="337" started-at="2020-08-27T12:34:28Z" finished-at="2020-08-27T12:34:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyIsSelectMakeMakerSelectable -->
        <test-method status="PASS" signature="verifyIsSelectModelMakerSelectable()[pri:0, instance:testScripts.Motorcycle.EnterVehicleData@73ad2d6]" name="verifyIsSelectModelMakerSelectable" duration-ms="210" started-at="2020-08-27T12:34:28Z" finished-at="2020-08-27T12:34:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyIsSelectModelMakerSelectable -->
        <test-method status="PASS" signature="verifyIsSelectnumberofseatsSelectable()[pri:0, instance:testScripts.Motorcycle.EnterVehicleData@73ad2d6]" name="verifyIsSelectnumberofseatsSelectable" duration-ms="214" started-at="2020-08-27T12:34:28Z" finished-at="2020-08-27T12:34:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyIsSelectnumberofseatsSelectable -->
        <test-method status="PASS" signature="verifyListPriceSelection()[pri:0, instance:testScripts.Motorcycle.EnterVehicleData@73ad2d6]" name="verifyListPriceSelection" duration-ms="1652" started-at="2020-08-27T12:34:29Z" finished-at="2020-08-27T12:34:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyListPriceSelection -->
        <test-method status="PASS" signature="verifyIsOpendateOfcalenderClickable()[pri:1, instance:testScripts.Motorcycle.EnterVehicleData@73ad2d6]" name="verifyIsOpendateOfcalenderClickable" duration-ms="279" started-at="2020-08-27T12:34:30Z" finished-at="2020-08-27T12:34:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyIsOpendateOfcalenderClickable -->
        <test-method status="PASS" signature="verifyIsOpenNextClickable()[pri:2, instance:testScripts.Motorcycle.EnterVehicleData@73ad2d6]" name="verifyIsOpenNextClickable" duration-ms="266" started-at="2020-08-27T12:34:31Z" finished-at="2020-08-27T12:34:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyIsOpenNextClickable -->
        <test-method status="PASS" signature="verifyIsOpenPrevClickable()[pri:3, instance:testScripts.Motorcycle.EnterVehicleData@73ad2d6]" name="verifyIsOpenPrevClickable" duration-ms="169" started-at="2020-08-27T12:34:31Z" finished-at="2020-08-27T12:34:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyIsOpenPrevClickable -->
        <test-method status="FAIL" signature="verifyIsNextClickable()[pri:4, instance:testScripts.Motorcycle.EnterVehicleData@73ad2d6]" name="verifyIsNextClickable" duration-ms="1304" started-at="2020-08-27T12:34:31Z" finished-at="2020-08-27T12:34:32Z">
          <exception class="org.openqa.selenium.ElementClickInterceptedException">
            <message>
              <![CDATA[element click intercepted: Element <button id="nextenterinsurantdata" name="Next (Enter Insurant Data)" type="button" class="next button">...</button> is not clickable at point (393, 592). Other element would receive the click: <a class="ui-state-default" href="#">...</a>
  (Session info: chrome=84.0.4147.135)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:53'
System info: host: 'A', ip: '192.168.1.15', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_251'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 84.0.4147.135, chrome: {chromedriverVersion: 84.0.4147.30 (48b3e868b4cc0..., userDataDir: C:\Users\admin\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:63289}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: d2083c3a74f761472736b6af6e125cb9]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementClickInterceptedException: element click intercepted: Element <button id="nextenterinsurantdata" name="Next (Enter Insurant Data)" type="button" class="next button">...</button> is not clickable at point (393, 592). Other element would receive the click: <a class="ui-state-default" href="#">...</a>
  (Session info: chrome=84.0.4147.135)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:53'
System info: host: 'A', ip: '192.168.1.15', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_251'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 84.0.4147.135, chrome: {chromedriverVersion: 84.0.4147.30 (48b3e868b4cc0..., userDataDir: C:\Users\admin\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:63289}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: d2083c3a74f761472736b6af6e125cb9
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
	at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:285)
	at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:84)
	at pages.Motorcycle.EnterVehicleData.clickNextButton(EnterVehicleData.java:217)
	at testScripts.Motorcycle.EnterVehicleData.verifyIsNextClickable(EnterVehicleData.java:169)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementClickInterceptedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyIsNextClickable -->
        <test-method status="PASS" signature="closeBrowser()[pri:0, instance:testScripts.Motorcycle.EnterVehicleData@73ad2d6]" name="closeBrowser" is-config="true" duration-ms="902" started-at="2020-08-27T12:35:37Z" finished-at="2020-08-27T12:35:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:testScripts.Motorcycle.EnterVehicleData@73ad2d6]" name="tearDown" is-config="true" duration-ms="1" started-at="2020-08-27T12:35:38Z" finished-at="2020-08-27T12:35:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- testScripts.Motorcycle.EnterVehicleData -->
      <class name="testScripts.Motorcycle.SelectPriceOption">
        <test-method status="PASS" signature="preClass()[pri:0, instance:testScripts.Motorcycle.SelectPriceOption@5700d6b1]" name="preClass" is-config="true" duration-ms="13055" started-at="2020-08-27T12:35:10Z" finished-at="2020-08-27T12:35:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preClass -->
        <test-method status="PASS" signature="verifyIsSelectpriceoptionVisible()[pri:0, instance:testScripts.Motorcycle.SelectPriceOption@5700d6b1]" name="verifyIsSelectpriceoptionVisible" duration-ms="579" started-at="2020-08-27T12:35:23Z" finished-at="2020-08-27T12:35:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyIsSelectpriceoptionVisible -->
        <test-method status="PASS" signature="verifyIsSelectpriceoptiontext()[pri:1, instance:testScripts.Motorcycle.SelectPriceOption@5700d6b1]" name="verifyIsSelectpriceoptiontext" duration-ms="526" started-at="2020-08-27T12:35:24Z" finished-at="2020-08-27T12:35:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyIsSelectpriceoptiontext -->
        <test-method status="PASS" signature="verifyIsSelectpriceoptionClickable()[pri:2, instance:testScripts.Motorcycle.SelectPriceOption@5700d6b1]" name="verifyIsSelectpriceoptionClickable" duration-ms="688" started-at="2020-08-27T12:35:24Z" finished-at="2020-08-27T12:35:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyIsSelectpriceoptionClickable -->
        <test-method status="PASS" signature="verifyIsSelectpriceoption1text()[pri:3, instance:testScripts.Motorcycle.SelectPriceOption@5700d6b1]" name="verifyIsSelectpriceoption1text" duration-ms="245" started-at="2020-08-27T12:35:25Z" finished-at="2020-08-27T12:35:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyIsSelectpriceoption1text -->
        <test-method status="PASS" signature="verifyIsSelectpriceoption1Clickable()[pri:4, instance:testScripts.Motorcycle.SelectPriceOption@5700d6b1]" name="verifyIsSelectpriceoption1Clickable" duration-ms="144" started-at="2020-08-27T12:35:25Z" finished-at="2020-08-27T12:35:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyIsSelectpriceoption1Clickable -->
      </class> <!-- testScripts.Motorcycle.SelectPriceOption -->
      <class name="testScripts.Motorcycle.SendQuote">
        <test-method status="PASS" signature="beforeProductData()[pri:0, instance:testScripts.Motorcycle.SendQuote@6fd02e5]" name="beforeProductData" is-config="true" duration-ms="3016" started-at="2020-08-27T12:35:26Z" finished-at="2020-08-27T12:35:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeProductData -->
        <test-method status="PASS" signature="verifyIsCommentsVisible()[pri:0, instance:testScripts.Motorcycle.SendQuote@6fd02e5]" name="verifyIsCommentsVisible" duration-ms="46" started-at="2020-08-27T12:35:29Z" finished-at="2020-08-27T12:35:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyIsCommentsVisible -->
        <test-method status="PASS" signature="verifyIsConfirmpasswordVisible()[pri:0, instance:testScripts.Motorcycle.SendQuote@6fd02e5]" name="verifyIsConfirmpasswordVisible" duration-ms="34" started-at="2020-08-27T12:35:29Z" finished-at="2020-08-27T12:35:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyIsConfirmpasswordVisible -->
        <test-method status="PASS" signature="verifyIsEmailVisible()[pri:0, instance:testScripts.Motorcycle.SendQuote@6fd02e5]" name="verifyIsEmailVisible" duration-ms="31" started-at="2020-08-27T12:35:29Z" finished-at="2020-08-27T12:35:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyIsEmailVisible -->
        <test-method status="PASS" signature="verifyIsMainpageVisible()[pri:0, instance:testScripts.Motorcycle.SendQuote@6fd02e5]" name="verifyIsMainpageVisible" duration-ms="29" started-at="2020-08-27T12:35:29Z" finished-at="2020-08-27T12:35:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyIsMainpageVisible -->
        <test-method status="PASS" signature="verifyIsNewautomobileinsuranceVisible()[pri:0, instance:testScripts.Motorcycle.SendQuote@6fd02e5]" name="verifyIsNewautomobileinsuranceVisible" duration-ms="31" started-at="2020-08-27T12:35:29Z" finished-at="2020-08-27T12:35:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyIsNewautomobileinsuranceVisible -->
        <test-method status="PASS" signature="verifyIsNewcamperinsuranceVisible()[pri:0, instance:testScripts.Motorcycle.SendQuote@6fd02e5]" name="verifyIsNewcamperinsuranceVisible" duration-ms="32" started-at="2020-08-27T12:35:29Z" finished-at="2020-08-27T12:35:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyIsNewcamperinsuranceVisible -->
        <test-method status="PASS" signature="verifyIsNewtruckinsuranceVisible()[pri:0, instance:testScripts.Motorcycle.SendQuote@6fd02e5]" name="verifyIsNewtruckinsuranceVisible" duration-ms="30" started-at="2020-08-27T12:35:29Z" finished-at="2020-08-27T12:35:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyIsNewtruckinsuranceVisible -->
        <test-method status="PASS" signature="verifyIsPasswordVisible()[pri:0, instance:testScripts.Motorcycle.SendQuote@6fd02e5]" name="verifyIsPasswordVisible" duration-ms="30" started-at="2020-08-27T12:35:29Z" finished-at="2020-08-27T12:35:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyIsPasswordVisible -->
        <test-method status="PASS" signature="verifyIsPhoneVisible()[pri:0, instance:testScripts.Motorcycle.SendQuote@6fd02e5]" name="verifyIsPhoneVisible" duration-ms="30" started-at="2020-08-27T12:35:29Z" finished-at="2020-08-27T12:35:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyIsPhoneVisible -->
        <test-method status="PASS" signature="verifyIsPrevVisible()[pri:0, instance:testScripts.Motorcycle.SendQuote@6fd02e5]" name="verifyIsPrevVisible" duration-ms="32" started-at="2020-08-27T12:35:29Z" finished-at="2020-08-27T12:35:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyIsPrevVisible -->
        <test-method status="PASS" signature="verifyIsSendemailVisible()[pri:0, instance:testScripts.Motorcycle.SendQuote@6fd02e5]" name="verifyIsSendemailVisible" duration-ms="33" started-at="2020-08-27T12:35:29Z" finished-at="2020-08-27T12:35:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyIsSendemailVisible -->
        <test-method status="PASS" signature="verifyIsUsernameVisible()[pri:0, instance:testScripts.Motorcycle.SendQuote@6fd02e5]" name="verifyIsUsernameVisible" duration-ms="30" started-at="2020-08-27T12:35:29Z" finished-at="2020-08-27T12:35:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyIsUsernameVisible -->
        <test-method status="PASS" signature="enterandVerifySendQuotesPage()[pri:1, instance:testScripts.Motorcycle.SendQuote@6fd02e5]" name="enterandVerifySendQuotesPage" duration-ms="7737" started-at="2020-08-27T12:35:29Z" finished-at="2020-08-27T12:35:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enterandVerifySendQuotesPage -->
      </class> <!-- testScripts.Motorcycle.SendQuote -->
      <class name="testScripts.Motorcycle.EnterInsuranceData">
        <test-method status="PASS" signature="navigateToEnterInsuranceData()[pri:0, instance:testScripts.Motorcycle.EnterInsuranceData@7085bdee]" name="navigateToEnterInsuranceData" is-config="true" duration-ms="218" started-at="2020-08-27T12:34:32Z" finished-at="2020-08-27T12:34:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigateToEnterInsuranceData -->
        <test-method status="SKIP" signature="hobbiesOptionsVisible(java.lang.String)[pri:0, instance:testScripts.Motorcycle.EnterInsuranceData@7085bdee]" name="hobbiesOptionsVisible" duration-ms="0" started-at="2020-08-27T12:34:33Z" data-provider="hobbiesOptions" finished-at="2020-08-27T12:34:33Z">
          <exception class="org.testng.TestNGException">
            <message>
              <![CDATA[
Data Provider public java.lang.String[] testScripts.Motorcycle.EnterInsuranceData.hobbiesOptions() throws java.io.IOException must return either Object[][] or Iterator<Object>[], not class [Ljava.lang.String;]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestNGException: 
Data Provider public java.lang.String[] testScripts.Motorcycle.EnterInsuranceData.hobbiesOptions() throws java.io.IOException must return either Object[][] or Iterator<Object>[], not class [Ljava.lang.String;
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:157)
	at org.testng.internal.Parameters.handleParameters(Parameters.java:430)
	at org.testng.internal.Invoker.handleParameters(Invoker.java:1243)
	at org.testng.internal.Invoker.createParameters(Invoker.java:992)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1082)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestNGException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- hobbiesOptionsVisible -->
        <test-method status="SKIP" signature="invalidFirstName(java.lang.String)[pri:0, instance:testScripts.Motorcycle.EnterInsuranceData@7085bdee]" name="invalidFirstName" duration-ms="0" started-at="2020-08-27T12:34:33Z" data-provider="invalidNames" finished-at="2020-08-27T12:34:33Z">
          <exception class="org.testng.TestNGException">
            <message>
              <![CDATA[
Data Provider public java.lang.String[] testScripts.Motorcycle.EnterInsuranceData.invalidNames() throws java.io.IOException must return either Object[][] or Iterator<Object>[], not class [Ljava.lang.String;]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestNGException: 
Data Provider public java.lang.String[] testScripts.Motorcycle.EnterInsuranceData.invalidNames() throws java.io.IOException must return either Object[][] or Iterator<Object>[], not class [Ljava.lang.String;
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:157)
	at org.testng.internal.Parameters.handleParameters(Parameters.java:430)
	at org.testng.internal.Invoker.handleParameters(Invoker.java:1243)
	at org.testng.internal.Invoker.createParameters(Invoker.java:992)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1082)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestNGException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidFirstName -->
        <test-method status="SKIP" signature="invalidLastName(java.lang.String)[pri:0, instance:testScripts.Motorcycle.EnterInsuranceData@7085bdee]" name="invalidLastName" duration-ms="0" started-at="2020-08-27T12:34:33Z" data-provider="invalidNames" finished-at="2020-08-27T12:34:33Z">
          <exception class="org.testng.TestNGException">
            <message>
              <![CDATA[
Data Provider public java.lang.String[] testScripts.Motorcycle.EnterInsuranceData.invalidNames() throws java.io.IOException must return either Object[][] or Iterator<Object>[], not class [Ljava.lang.String;]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestNGException: 
Data Provider public java.lang.String[] testScripts.Motorcycle.EnterInsuranceData.invalidNames() throws java.io.IOException must return either Object[][] or Iterator<Object>[], not class [Ljava.lang.String;
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:157)
	at org.testng.internal.Parameters.handleParameters(Parameters.java:430)
	at org.testng.internal.Invoker.handleParameters(Invoker.java:1243)
	at org.testng.internal.Invoker.createParameters(Invoker.java:992)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1082)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestNGException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidLastName -->
        <test-method status="SKIP" signature="invalidWebsitentry(java.lang.String)[pri:0, instance:testScripts.Motorcycle.EnterInsuranceData@7085bdee]" name="invalidWebsitentry" duration-ms="0" started-at="2020-08-27T12:34:33Z" data-provider="invalidWebsiteTestData" finished-at="2020-08-27T12:34:33Z">
          <exception class="org.testng.TestNGException">
            <message>
              <![CDATA[
Data Provider public java.lang.String[] testScripts.Motorcycle.EnterInsuranceData.invalidWebsiteTestData() throws java.io.IOException must return either Object[][] or Iterator<Object>[], not class [Ljava.lang.String;]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestNGException: 
Data Provider public java.lang.String[] testScripts.Motorcycle.EnterInsuranceData.invalidWebsiteTestData() throws java.io.IOException must return either Object[][] or Iterator<Object>[], not class [Ljava.lang.String;
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:157)
	at org.testng.internal.Parameters.handleParameters(Parameters.java:430)
	at org.testng.internal.Invoker.handleParameters(Invoker.java:1243)
	at org.testng.internal.Invoker.createParameters(Invoker.java:992)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1082)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestNGException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidWebsitentry -->
        <test-method status="SKIP" signature="invalidZipCode(java.lang.String)[pri:0, instance:testScripts.Motorcycle.EnterInsuranceData@7085bdee]" name="invalidZipCode" duration-ms="0" started-at="2020-08-27T12:34:33Z" data-provider="invalidZipCodeEntry" finished-at="2020-08-27T12:34:33Z">
          <exception class="org.testng.TestNGException">
            <message>
              <![CDATA[
Data Provider public java.lang.String[] testScripts.Motorcycle.EnterInsuranceData.invalidZipCodeEntry() must return either Object[][] or Iterator<Object>[], not class [Ljava.lang.String;]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestNGException: 
Data Provider public java.lang.String[] testScripts.Motorcycle.EnterInsuranceData.invalidZipCodeEntry() must return either Object[][] or Iterator<Object>[], not class [Ljava.lang.String;
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:157)
	at org.testng.internal.Parameters.handleParameters(Parameters.java:430)
	at org.testng.internal.Invoker.handleParameters(Invoker.java:1243)
	at org.testng.internal.Invoker.createParameters(Invoker.java:992)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1082)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestNGException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidZipCode -->
        <test-method status="PASS" signature="isHobbiesCheckBoxVisible()[pri:0, instance:testScripts.Motorcycle.EnterInsuranceData@7085bdee]" name="isHobbiesCheckBoxVisible" duration-ms="93" started-at="2020-08-27T12:34:33Z" finished-at="2020-08-27T12:34:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isHobbiesCheckBoxVisible -->
        <test-method status="PASS" signature="isHobbiesLabelVisible()[pri:0, instance:testScripts.Motorcycle.EnterInsuranceData@7085bdee]" name="isHobbiesLabelVisible" duration-ms="41" started-at="2020-08-27T12:34:33Z" finished-at="2020-08-27T12:34:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isHobbiesLabelVisible -->
        <test-method status="PASS" signature="isNextButtonVisible()[pri:0, instance:testScripts.Motorcycle.EnterInsuranceData@7085bdee]" name="isNextButtonVisible" duration-ms="44" started-at="2020-08-27T12:34:33Z" finished-at="2020-08-27T12:34:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isNextButtonVisible -->
        <test-method status="PASS" signature="isPictureLabelVisible()[pri:0, instance:testScripts.Motorcycle.EnterInsuranceData@7085bdee]" name="isPictureLabelVisible" duration-ms="36" started-at="2020-08-27T12:34:33Z" finished-at="2020-08-27T12:34:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isPictureLabelVisible -->
        <test-method status="PASS" signature="isPrevButtonVisible()[pri:0, instance:testScripts.Motorcycle.EnterInsuranceData@7085bdee]" name="isPrevButtonVisible" duration-ms="30" started-at="2020-08-27T12:34:33Z" finished-at="2020-08-27T12:34:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isPrevButtonVisible -->
        <test-method status="PASS" signature="isWebsiteLabelVisible()[pri:0, instance:testScripts.Motorcycle.EnterInsuranceData@7085bdee]" name="isWebsiteLabelVisible" duration-ms="34" started-at="2020-08-27T12:34:33Z" finished-at="2020-08-27T12:34:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isWebsiteLabelVisible -->
        <test-method status="PASS" signature="isWebsiteTextBoxVisible()[pri:0, instance:testScripts.Motorcycle.EnterInsuranceData@7085bdee]" name="isWebsiteTextBoxVisible" duration-ms="29" started-at="2020-08-27T12:34:33Z" finished-at="2020-08-27T12:34:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isWebsiteTextBoxVisible -->
        <test-method status="SKIP" signature="occupationOptionsVisible(java.lang.String)[pri:0, instance:testScripts.Motorcycle.EnterInsuranceData@7085bdee]" name="occupationOptionsVisible" duration-ms="0" started-at="2020-08-27T12:34:33Z" data-provider="occupationOptions" finished-at="2020-08-27T12:34:33Z">
          <exception class="org.testng.TestNGException">
            <message>
              <![CDATA[
Data Provider public java.lang.String[] testScripts.Motorcycle.EnterInsuranceData.occupationOptions() throws java.io.IOException must return either Object[][] or Iterator<Object>[], not class [Ljava.lang.String;]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestNGException: 
Data Provider public java.lang.String[] testScripts.Motorcycle.EnterInsuranceData.occupationOptions() throws java.io.IOException must return either Object[][] or Iterator<Object>[], not class [Ljava.lang.String;
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:157)
	at org.testng.internal.Parameters.handleParameters(Parameters.java:430)
	at org.testng.internal.Invoker.handleParameters(Invoker.java:1243)
	at org.testng.internal.Invoker.createParameters(Invoker.java:992)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1082)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestNGException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- occupationOptionsVisible -->
        <test-method status="FAIL" signature="selectPicture()[pri:0, instance:testScripts.Motorcycle.EnterInsuranceData@7085bdee]" name="selectPicture" duration-ms="25367" started-at="2020-08-27T12:34:33Z" finished-at="2020-08-27T12:34:58Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:305)
	at org.testng.Assert.assertEquals(Assert.java:315)
	at testScripts.Motorcycle.EnterInsuranceData.selectPicture(EnterInsuranceData.java:111)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:823)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1131)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectPicture -->
        <test-method status="PASS" signature="validCountryDropDown()[pri:0, instance:testScripts.Motorcycle.EnterInsuranceData@7085bdee]" name="validCountryDropDown" duration-ms="597" started-at="2020-08-27T12:34:58Z" finished-at="2020-08-27T12:34:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validCountryDropDown -->
        <test-method status="SKIP" signature="validFirstName(java.lang.String)[pri:0, instance:testScripts.Motorcycle.EnterInsuranceData@7085bdee]" name="validFirstName" duration-ms="0" started-at="2020-08-27T12:34:59Z" data-provider="validNames" finished-at="2020-08-27T12:34:59Z">
          <exception class="org.testng.TestNGException">
            <message>
              <![CDATA[
Data Provider public java.lang.String[] testScripts.Motorcycle.EnterInsuranceData.validNames() throws java.io.IOException must return either Object[][] or Iterator<Object>[], not class [Ljava.lang.String;]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestNGException: 
Data Provider public java.lang.String[] testScripts.Motorcycle.EnterInsuranceData.validNames() throws java.io.IOException must return either Object[][] or Iterator<Object>[], not class [Ljava.lang.String;
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:157)
	at org.testng.internal.Parameters.handleParameters(Parameters.java:430)
	at org.testng.internal.Invoker.handleParameters(Invoker.java:1243)
	at org.testng.internal.Invoker.createParameters(Invoker.java:992)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1082)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestNGException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validFirstName -->
        <test-method status="PASS" signature="validHobbiesSelection()[pri:0, instance:testScripts.Motorcycle.EnterInsuranceData@7085bdee]" name="validHobbiesSelection" duration-ms="248" started-at="2020-08-27T12:34:59Z" finished-at="2020-08-27T12:34:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validHobbiesSelection -->
        <test-method status="SKIP" signature="validLastName(java.lang.String)[pri:0, instance:testScripts.Motorcycle.EnterInsuranceData@7085bdee]" name="validLastName" duration-ms="0" started-at="2020-08-27T12:34:59Z" data-provider="validNames" finished-at="2020-08-27T12:34:59Z">
          <exception class="org.testng.TestNGException">
            <message>
              <![CDATA[
Data Provider public java.lang.String[] testScripts.Motorcycle.EnterInsuranceData.validNames() throws java.io.IOException must return either Object[][] or Iterator<Object>[], not class [Ljava.lang.String;]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestNGException: 
Data Provider public java.lang.String[] testScripts.Motorcycle.EnterInsuranceData.validNames() throws java.io.IOException must return either Object[][] or Iterator<Object>[], not class [Ljava.lang.String;
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:157)
	at org.testng.internal.Parameters.handleParameters(Parameters.java:430)
	at org.testng.internal.Invoker.handleParameters(Invoker.java:1243)
	at org.testng.internal.Invoker.createParameters(Invoker.java:992)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1082)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestNGException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validLastName -->
        <test-method status="PASS" signature="validOccupationDropDown()[pri:0, instance:testScripts.Motorcycle.EnterInsuranceData@7085bdee]" name="validOccupationDropDown" duration-ms="421" started-at="2020-08-27T12:34:59Z" finished-at="2020-08-27T12:35:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validOccupationDropDown -->
        <test-method status="SKIP" signature="validWebsiteEntry(java.lang.String)[pri:0, instance:testScripts.Motorcycle.EnterInsuranceData@7085bdee]" name="validWebsiteEntry" duration-ms="0" started-at="2020-08-27T12:35:00Z" data-provider="validWebsiteTestData" finished-at="2020-08-27T12:35:00Z">
          <exception class="org.testng.TestNGException">
            <message>
              <![CDATA[
Data Provider public java.lang.String[] testScripts.Motorcycle.EnterInsuranceData.validWebsiteTestData() throws java.io.IOException must return either Object[][] or Iterator<Object>[], not class [Ljava.lang.String;]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestNGException: 
Data Provider public java.lang.String[] testScripts.Motorcycle.EnterInsuranceData.validWebsiteTestData() throws java.io.IOException must return either Object[][] or Iterator<Object>[], not class [Ljava.lang.String;
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:157)
	at org.testng.internal.Parameters.handleParameters(Parameters.java:430)
	at org.testng.internal.Invoker.handleParameters(Invoker.java:1243)
	at org.testng.internal.Invoker.createParameters(Invoker.java:992)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1082)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestNGException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validWebsiteEntry -->
        <test-method status="SKIP" signature="validZipCode(java.lang.String)[pri:0, instance:testScripts.Motorcycle.EnterInsuranceData@7085bdee]" name="validZipCode" duration-ms="0" started-at="2020-08-27T12:35:00Z" data-provider="validZipCodeEntry" finished-at="2020-08-27T12:35:00Z">
          <exception class="org.testng.TestNGException">
            <message>
              <![CDATA[
Data Provider public java.lang.String[] testScripts.Motorcycle.EnterInsuranceData.validZipCodeEntry() must return either Object[][] or Iterator<Object>[], not class [Ljava.lang.String;]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestNGException: 
Data Provider public java.lang.String[] testScripts.Motorcycle.EnterInsuranceData.validZipCodeEntry() must return either Object[][] or Iterator<Object>[], not class [Ljava.lang.String;
	at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:157)
	at org.testng.internal.Parameters.handleParameters(Parameters.java:430)
	at org.testng.internal.Invoker.handleParameters(Invoker.java:1243)
	at org.testng.internal.Invoker.createParameters(Invoker.java:992)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1082)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:778)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1225)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1150)
	at org.testng.TestNG.runSuites(TestNG.java:1075)
	at org.testng.TestNG.run(TestNG.java:1047)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:137)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:58)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestNGException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validZipCode -->
        <test-method status="PASS" signature="verifyNextButtonText()[pri:0, instance:testScripts.Motorcycle.EnterInsuranceData@7085bdee]" name="verifyNextButtonText" duration-ms="68" started-at="2020-08-27T12:35:00Z" finished-at="2020-08-27T12:35:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyNextButtonText -->
        <test-method status="PASS" signature="verifyOnClickPrevButton()[pri:0, instance:testScripts.Motorcycle.EnterInsuranceData@7085bdee]" name="verifyOnClickPrevButton" duration-ms="499" started-at="2020-08-27T12:35:00Z" finished-at="2020-08-27T12:35:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyOnClickPrevButton -->
        <test-method status="PASS" signature="verifyPrevButtonText()[pri:0, instance:testScripts.Motorcycle.EnterInsuranceData@7085bdee]" name="verifyPrevButtonText" duration-ms="124" started-at="2020-08-27T12:35:00Z" finished-at="2020-08-27T12:35:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyPrevButtonText -->
        <test-method status="PASS" signature="verifyOnClickNextButton()[pri:1, instance:testScripts.Motorcycle.EnterInsuranceData@7085bdee]" name="verifyOnClickNextButton" duration-ms="2361" started-at="2020-08-27T12:35:00Z" finished-at="2020-08-27T12:35:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyOnClickNextButton -->
      </class> <!-- testScripts.Motorcycle.EnterInsuranceData -->
    </test> <!-- Motorcycle -->
  </suite> <!-- Suite -->
</testng-results>
